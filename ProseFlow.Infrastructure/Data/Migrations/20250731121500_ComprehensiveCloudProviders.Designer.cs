// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProseFlow.Infrastructure.Data;

#nullable disable

namespace ProseFlow.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250731121500_ComprehensiveCloudProviders")]
    partial class ComprehensiveCloudProviders
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("ProseFlow.Core.Models.Action", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApplicationContext")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("ExplainChanges")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Instruction")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("OpenInWindow")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SortOrder")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Actions");
                });

            modelBuilder.Entity("ProseFlow.Core.Models.CloudProviderConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApiKey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BaseUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProviderType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SortOrder")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Temperature")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("CloudProviderConfigurations");
                });

            modelBuilder.Entity("ProseFlow.Core.Models.GeneralSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ActionMenuHotkey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("LaunchAtLogin")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SmartPasteActionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SmartPasteHotkey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GeneralSettings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActionMenuHotkey = "Ctrl+J",
                            LaunchAtLogin = false,
                            SmartPasteHotkey = "Ctrl+Shift+V",
                            Theme = "System"
                        });
                });

            modelBuilder.Entity("ProseFlow.Core.Models.HistoryEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InputText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OutputText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderUsed")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("History");
                });

            modelBuilder.Entity("ProseFlow.Core.Models.ProviderSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FallbackServiceType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("LocalCpuCores")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LocalModelPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("PreferGpu")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PrimaryServiceType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ProviderSettings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FallbackServiceType = "None",
                            LocalCpuCores = 4,
                            LocalModelPath = "",
                            PreferGpu = true,
                            PrimaryServiceType = "Cloud"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}

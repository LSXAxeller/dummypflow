<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFrameworks>net8.0;net8.0-windows;net8.0-macos</TargetFrameworks>
        <ApplicationId>com.lsxprime.proseflow</ApplicationId>
        <UseAppHost>true</UseAppHost>
        <AssemblyName>ProseFlow</AssemblyName>
        <Nullable>enable</Nullable>
        <BuiltInComInteropSupport>true</BuiltInComInteropSupport>
        <ApplicationManifest>app.manifest</ApplicationManifest>
        <AvaloniaUseCompiledBindingsByDefault>true</AvaloniaUseCompiledBindingsByDefault>
        <AvaloniaVersion>11.3.4</AvaloniaVersion>
        <Version>0.1.0</Version>
    </PropertyGroup>

    <PropertyGroup Condition="'$(TargetFramework)' == 'net8.0-windows'">
        <OutputType>WinExe</OutputType>
    </PropertyGroup>
    <PropertyGroup Condition="'$(TargetFramework)' == 'net8.0' or $(TargetFramework.StartsWith('net8.0-macos'))">
        <OutputType>Exe</OutputType>
    </PropertyGroup>

    <ItemGroup>
        <AvaloniaResource Include="Assets\Fonts\*" />
        <AvaloniaResource Include="Assets\Icons\*" />
        <AvaloniaResource Include="Assets\logo.ico" />
        <AvaloniaResource Include="Assets\logo.svg" />
    </ItemGroup>

    <ItemGroup>
        <EmbeddedResource Include="Assets\Presets\*.json" />
        <None Include="..\README.md" Pack="true" PackagePath="" />
        <None Include="..\LICENSE.md" Pack="true" PackagePath="" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Avalonia" Version="$(AvaloniaVersion)" />
        <PackageReference Include="Avalonia.Desktop" Version="$(AvaloniaVersion)" />
        <PackageReference Include="Avalonia.Themes.Fluent" Version="$(AvaloniaVersion)" />
        <PackageReference Include="Avalonia.Fonts.Inter" Version="$(AvaloniaVersion)" />
        <!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.-->
        <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics" Version="$(AvaloniaVersion)" />
        <PackageReference Include="CommunityToolkit.Mvvm" Version="8.4.0" />
        <PackageReference Include="LiveChartsCore.SkiaSharpView.Avalonia" Version="2.0.0-rc5.4" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="9.0.7">
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="9.0.7" />
        <PackageReference Include="Markdown.Avalonia.YouYan" Version="11.2.0-a4" />
        <PackageReference Include="Serilog" Version="4.3.0" />
        <PackageReference Include="Serilog.Extensions.Logging" Version="9.0.2" />
        <PackageReference Include="Serilog.Sinks.File" Version="7.0.0" />
        <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Serilog.Sinks.Console" Version="6.0.0" />
        <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Serilog.Sinks.Debug" Version="3.0.0" />
        <PackageReference Include="ShadUI" Version="0.1.5" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\ProseFlow.Application\ProseFlow.Application.csproj" />
        <ProjectReference Include="..\ProseFlow.Infrastructure\ProseFlow.Infrastructure.csproj" />
    </ItemGroup>

    <Target Name="RemoveUnusedRuntimesAfterPublish" BeforeTargets="Publish">
        <PropertyGroup>
            <IsWindowsPublish Condition="$([System.String]::new('$(RuntimeIdentifier)').StartsWith('win'))">true</IsWindowsPublish>
            <IsMacOsPublish Condition="$([System.String]::new('$(RuntimeIdentifier)').StartsWith('osx'))">true</IsMacOsPublish>
            <IsLinuxPublish Condition="$([System.String]::new('$(RuntimeIdentifier)').StartsWith('linux'))">true</IsLinuxPublish>
        </PropertyGroup>

        <ItemGroup>
            <RuntimesToDelete Include="$(PublishDir)runtimes\win-x64" />
            <RuntimesToDelete Include="$(PublishDir)runtimes\osx-arm64" />
            <RuntimesToDelete Include="$(PublishDir)runtimes\osx-x64" />
            <RuntimesToDelete Include="$(PublishDir)runtimes\linux-arm64" />
            <RuntimesToDelete Include="$(PublishDir)runtimes\linux-x64" />
            <RuntimesToDelete Include="$(PublishDir)runtimes\linux-musl-x64" />
        </ItemGroup>
        
        <ItemGroup Condition="'$(IsWindowsPublish)' == 'true'">
            <RuntimesToDelete Remove="$(PublishDir)runtimes\win-x64" />
        </ItemGroup>
        <ItemGroup Condition="'$(IsMacOsPublish)' == 'true'">
            <RuntimesToDelete Remove="$(PublishDir)runtimes\osx-arm64" />
            <RuntimesToDelete Remove="$(PublishDir)runtimes\osx-x64" />
        </ItemGroup>
        <ItemGroup Condition="'$(IsLinuxPublish)' == 'true'">
            <RuntimesToDelete Remove="$(PublishDir)runtimes\linux-arm64" />
            <RuntimesToDelete Remove="$(PublishDir)runtimes\linux-x64" />
            <RuntimesToDelete Remove="$(PublishDir)runtimes\linux-musl-x64" />
        </ItemGroup>

        <Message Condition="'@(RuntimesToDelete)' != ''"
                 Text="[ProseFlow.UI] Publishing for '$(RuntimeIdentifier)'. Removing unused runtimes: @(RuntimesToDelete, '; ')"
                 Importance="high" />

        <RemoveDir Directories="@(RuntimesToDelete)" />
    </Target>


</Project>
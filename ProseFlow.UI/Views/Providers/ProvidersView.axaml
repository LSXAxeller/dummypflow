<UserControl
    x:Class="ProseFlow.UI.Views.Providers.ProvidersView"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="using:ProseFlow.UI.Behaviors"
    xmlns:shadui="clr-namespace:ShadUI;assembly=ShadUI"
    xmlns:vm="using:ProseFlow.UI.ViewModels.Providers"
    xmlns:ai="clr-namespace:ProseFlow.Infrastructure.Services.AiProviders;assembly=ProseFlow.Infrastructure"
    x:DataType="vm:ProvidersViewModel">

    <DockPanel LastChildFill="True">

        <!-- Page Header -->
        <StackPanel Margin="48,24" DockPanel.Dock="Top" Spacing="4">
            <TextBlock Classes="h2" Text="AI Providers" />
            <TextBlock
                Classes="p"
                Text="Configure your AI models, both cloud-based and local."
                TextWrapping="Wrap" />
        </StackPanel>

        <!-- Footer with Save Button -->
        <Border
            DockPanel.Dock="Bottom"
            Padding="16"
            BorderBrush="{DynamicResource BorderColor}"
            BorderThickness="0,1,0,0">
            <Button
                Classes="Primary"
                Command="{Binding SaveCommand}"
                HorizontalAlignment="Right">
                <shadui:ButtonAssist.Icon>
                    <TextBlock Classes="LucideIcon" Text="" />
                </shadui:ButtonAssist.Icon>
                Save Provider Settings
            </Button>
        </Border>

        <!-- Scrollable Main Content -->
        <ScrollViewer>
            <StackPanel Margin="48,0,48,24" Spacing="32">

                <!-- Card 1: Cloud Provider Fallback Chain -->
                <shadui:Card HasShadow="True">
                    <shadui:Card.Header>
                        <DockPanel>
                            <Button Classes="Primary" DockPanel.Dock="Right" VerticalAlignment="Top"
                                    Command="{Binding AddProviderCommand}">
                                <shadui:ButtonAssist.Icon>
                                    <TextBlock Classes="LucideIcon" Text="" />
                                </shadui:ButtonAssist.Icon>
                                Add Provider
                            </Button>
                            <StackPanel Orientation="Horizontal" Spacing="12">
                                <TextBlock Classes="LucideIcon h3" Text="" />
                                <StackPanel>
                                    <shadui:CardTitle>Cloud Provider Fallback Chain</shadui:CardTitle>
                                    <shadui:CardDescription>Add and reorder providers. They will be tried from top to bottom.</shadui:CardDescription>
                                </StackPanel>
                            </StackPanel>
                        </DockPanel>
                    </shadui:Card.Header>
                    <DataGrid
                        b:DataGridDragDropBehavior.ReorderCommand="{Binding ReorderProviderCommand}"
                        AutoGenerateColumns="False"
                        CanUserReorderColumns="False" CanUserResizeColumns="True" CanUserSortColumns="False"
                        GridLinesVisibility="Horizontal" IsReadOnly="True"
                        ItemsSource="{Binding CloudProviders}">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Width="40">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Classes="LucideIcon Muted"
                                                   Text="&#xE0EE;"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"
                                                   ToolTip.Tip="Drag to reorder"
                                                   Cursor="SizeAll" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Width="40" Binding="{Binding SortOrder}" Header="#" />
                            <DataGridTextColumn Width="*" MinWidth="160" Binding="{Binding Name}"
                                                Header="Configuration Name" />
                            <DataGridTextColumn Width="80" Binding="{Binding IsEnabled}" Header="Enabled" />
                            <DataGridTextColumn Width="150" MinWidth="85" Binding="{Binding ProviderType}"
                                                Header="Provider" />
                            <DataGridTextColumn Width="200" MinWidth="85" Binding="{Binding Model}" Header="Model" />
                            <DataGridTemplateColumn Width="120" Header="Actions">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal" Spacing="4" HorizontalAlignment="Center">
                                            <Button Classes="Ghost" ToolTip.Tip="Edit Provider"
                                                    Command="{Binding $parent[UserControl].((vm:ProvidersViewModel)DataContext).EditProviderCommand, FallbackValue={x:Null}}"
                                                    CommandParameter="{Binding .}">
                                                <TextBlock Classes="LucideIcon" Text="" TextAlignment="Center"
                                                           HorizontalAlignment="Center" />
                                            </Button>
                                            <Button Classes="Ghost Destructive" ToolTip.Tip="Delete Provider"
                                                    Command="{Binding $parent[UserControl].((vm:ProvidersViewModel)DataContext).DeleteProviderCommand, FallbackValue={x:Null}}"
                                                    CommandParameter="{Binding .}">
                                                <TextBlock Classes="LucideIcon" Text="" TextAlignment="Center"
                                                           HorizontalAlignment="Center" />
                                            </Button>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </shadui:Card>


                <!-- Local Provider Settings -->
                <shadui:Card HasShadow="True">
                    <shadui:Card.Header>
                        <StackPanel Orientation="Horizontal" Spacing="12">
                            <TextBlock Classes="LucideIcon h3" Text="" />
                            <StackPanel>
                                <shadui:CardTitle>Local Provider</shadui:CardTitle>
                                <shadui:CardDescription>Run models locally on your machine (via llama.cpp/LlamaSharp project).</shadui:CardDescription>
                            </StackPanel>
                        </StackPanel>
                    </shadui:Card.Header>

                    <StackPanel Spacing="16">
                        <!-- Model Path Selection -->
                        <Grid ColumnDefinitions="*, Auto" ColumnSpacing="8">
                            <TextBox
                                shadui:ControlAssist.Label="Model Path (.gguf)"
                                Text="{Binding LocalModelPath, Mode=OneWay}"
                                IsReadOnly="True" />
                            <Button
                                Grid.Column="1"
                                VerticalAlignment="Bottom"
                                Classes="Outline"
                                Command="{Binding BrowseForModelCommand}"
                                Content="Browse..." />
                        </Grid>

                        <!-- GPU and CPU Settings -->
                        <StackPanel Spacing="8" Margin="8,0">
                            <ToggleSwitch IsChecked="{Binding Settings.PreferGpu, FallbackValue={x:False}}">
                                Prefer GPU acceleration (if available)
                            </ToggleSwitch>

                            <ToggleSwitch IsChecked="{Binding Settings.LocalModelMemoryMap, FallbackValue={x:False}}"
                                          ToolTip.Tip="Enables faster model startup by loading parts of the model on demand. For best performance, keep this enabled unless you have enough RAM to hold the entire model and are experiencing slowdowns from memory swapping.">
                                Use Memory Mapping
                            </ToggleSwitch>

                            <ToggleSwitch IsChecked="{Binding Settings.LocalModelMemorylock, FallbackValue={x:False}}"
                                          ToolTip.Tip="Prevents the model from being swapped to disk, ensuring stable and fast performance. This is highly recommended but requires that your system has enough available RAM to hold the entire model.">
                                Lock Model in Memory"
                            </ToggleSwitch>
                        </StackPanel>
                        <!-- Temperature Control -->
                        <StackPanel>
                            <StackPanel>
                                <TextBlock Text="Temperature"
                                           ToolTip.Tip="Controls the creativity of the model's output" />
                                <Grid ColumnDefinitions="*,Auto" ColumnSpacing="16">
                                    <Slider Grid.Column="0" VerticalAlignment="Center" Maximum="2" Minimum="0"
                                            Value="{Binding LocalTemp, Mode=TwoWay}" />
                                    <TextBox Grid.Column="1" Width="50"
                                             Text="{Binding LocalTemp, Mode=TwoWay, StringFormat='F2'}" />
                                </Grid>
                            </StackPanel>
                            <StackPanel>
                                <TextBlock Text="Context Length" ToolTip.Tip="Number of tokens to keep in context" />
                                <Grid ColumnDefinitions="*,Auto" ColumnSpacing="16">
                                    <Slider Grid.Column="0" VerticalAlignment="Center" Maximum="64000" Minimum="0"
                                            TickFrequency="1000"
                                            Value="{Binding LocalContextSize, Mode=TwoWay}" />
                                    <TextBox Grid.Column="1" Width="50"
                                             Text="{Binding LocalContextSize, Mode=TwoWay, StringFormat='F2'}" />
                                </Grid>
                            </StackPanel>
                            <StackPanel>
                                <TextBlock Text="Max Tokens"
                                           ToolTip.Tip="Maximum number of tokens to generate per request" />
                                <Grid ColumnDefinitions="*,Auto" ColumnSpacing="16">
                                    <Slider Grid.Column="0" VerticalAlignment="Center" Maximum="64000" Minimum="0"
                                            TickFrequency="1000"
                                            Value="{Binding LocalMaxTokens, Mode=TwoWay}" />
                                    <TextBox Grid.Column="1" Width="50"
                                             Text="{Binding LocalMaxTokens, Mode=TwoWay, StringFormat='F2'}" />
                                </Grid>
                            </StackPanel>
                        </StackPanel>
                        <Separator />

                        <!-- Model Management and Status -->
                        <Grid ColumnDefinitions="Auto, *" ColumnSpacing="16" VerticalAlignment="Center">
                            <StackPanel Orientation="Horizontal" Spacing="8">
                                <Button Classes="Primary" Command="{Binding LoadLocalModelCommand}"
                                        IsEnabled="{Binding !IsManagerLoaded}">
                                    Load Model
                                </Button>
                                <Button Classes="Outline" Command="{Binding UnloadLocalModelCommand}"
                                        IsEnabled="{Binding IsManagerLoaded}">
                                    Unload Model
                                </Button>
                            </StackPanel>

                            <Panel Grid.Column="1" VerticalAlignment="Center">
                                <StackPanel Spacing="8" Orientation="Horizontal"
                                            IsVisible="{Binding ManagerStatus, Converter={x:Static ObjectConverters.Equal}, ConverterParameter={x:Static ai:ModelStatus.NotLoaded}}">
                                    <TextBlock Classes="LucideIcon Muted" Text="" />
                                    <TextBlock Classes="Muted" Text="Model is not loaded." VerticalAlignment="Center" />
                                </StackPanel>
                                <StackPanel Spacing="8" Orientation="Horizontal"
                                            IsVisible="{Binding ManagerStatus, Converter={x:Static ObjectConverters.Equal}, ConverterParameter={x:Static ai:ModelStatus.Loading}}">
                                    <ProgressBar IsIndeterminate="True" Width="16" Height="16" />
                                    <TextBlock Text="Loading model, please wait..." VerticalAlignment="Center" />
                                </StackPanel>
                                <StackPanel Spacing="8" Orientation="Horizontal"
                                            IsVisible="{Binding ManagerStatus, Converter={x:Static ObjectConverters.Equal}, ConverterParameter={x:Static ai:ModelStatus.Loaded}}">
                                    <TextBlock Classes="LucideIcon Success" Text="" />
                                    <TextBlock Classes="Success" Text="Model is loaded and ready."
                                               VerticalAlignment="Center" />
                                </StackPanel>
                                <StackPanel Spacing="8" Orientation="Horizontal"
                                            IsVisible="{Binding ManagerStatus, Converter={x:Static ObjectConverters.Equal}, ConverterParameter={x:Static ai:ModelStatus.Error}}">
                                    <TextBlock Classes="LucideIcon Destructive" Text="" />
                                    <TextBlock Classes="Destructive" Text="{Binding ManagerErrorMessage}"
                                               VerticalAlignment="Center" />
                                </StackPanel>
                            </Panel>
                        </Grid>
                    </StackPanel>
                </shadui:Card>

                <!-- Provider Switching Logic -->
                <shadui:Card HasShadow="True">
                    <shadui:Card.Header>
                        <StackPanel Orientation="Horizontal" Spacing="12">
                            <TextBlock Classes="LucideIcon h3" Text="" />
                            <StackPanel>
                                <shadui:CardTitle>Service Type Logic</shadui:CardTitle>
                                <shadui:CardDescription>Configure the high-level fallback between Cloud and Local services.</shadui:CardDescription>
                            </StackPanel>
                        </StackPanel>
                    </shadui:Card.Header>
                    <StackPanel Spacing="16">
                        <ComboBox
                            shadui:ControlAssist.Label="Primary Service Type"
                            shadui:ControlAssist.Hint="The default service to use for all actions."
                            ItemsSource="{Binding AvailableServiceTypes}"
                            SelectedItem="{Binding Settings.PrimaryServiceType, FallbackValue=''}" />
                        <ComboBox
                            shadui:ControlAssist.Label="Fallback Service Type"
                            shadui:ControlAssist.Hint="Used if the primary service type is unavailable."
                            ItemsSource="{Binding AvailableFallbackServiceTypes}"
                            SelectedItem="{Binding Settings.FallbackServiceType, FallbackValue=''}" />
                    </StackPanel>
                </shadui:Card>


            </StackPanel>
        </ScrollViewer>
    </DockPanel>
</UserControl>